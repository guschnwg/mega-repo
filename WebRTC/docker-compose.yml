services:
  tunnel:
    container_name: webrtc_tunnel
    image: cloudflare/cloudflared:latest
    command: [
      "tunnel",
      "--no-autoupdate",
      "run",
      "--token",
      "$TUNNEL_TOKEN",
    ]
    networks:
      - shared
    restart: always

  socket:
    container_name: webrtc_socket
    image: denoland/deno:1.43.6
    environment:
      - PWD=/code
    command: [
      "deno",
      "run",
      "--allow-net",
      "--allow-read",
      "/code/server.ts",
      "/code"
    ]
    volumes:
      - ./:/code:rw
    ports:
      - "5678:8080"
    networks:
      - shared
    restart: always

  client:
    container_name: webrtc_client
    build:
      context: ./JSClient
      dockerfile: Dockerfile
    environment:
      - PASSWORD=$CLIENT_PASSWORD
      - WS_HOST=$WS_HOST
      - STREAM_URL=$STREAM_URL
    networks:
      - shared
    restart: always

  stream:
    image: aler9/rtsp-simple-server
    container_name: webrtc_stream
    environment:
      - RTSP_PROTOCOLS=tcp
    networks:
      - shared
    ports:
      - "8554:8554"

  ffmpeg:
    image: jrottenberg/ffmpeg
    container_name: webrtc_ffmpeg
    command: [
      "-stream_loop",
      "-1",
      "-i",
      "/video.mp4",
      "-rtsp_transport",
      "tcp",
      "-c:v",
      "libx264",
      "-preset",
      "ultrafast",
      "-tune",
      "zerolatency",
      "-b:v",
      "500k",
      "-c:a",
      "aac",
      "-strict",
      "experimental",
      "-f",
      "rtsp",
      "rtsp://webrtc_stream:8554/live.stream"
    ]
    volumes:
      - ./video.mp4:/video.mp4:r
    networks:
      - shared
    restart: always

  mjpeg:
    container_name: webrtc_mjpeg
    environment:
      - STREAM_URL=$STREAM_URL
    build:
      context: ./mjpeg
      dockerfile: ./Dockerfile
    ports:
      - "9997:8080"
    volumes:
      - ./mjpeg:/mjpeg:rw
    restart: always
    networks:
      - shared

networks:
  shared: